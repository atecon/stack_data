This package delivers functions for "un-stacking" a panel dataset, and for
stacking a time-series dataset.

The unstack() function has no built-in gretl counterpart. The function
isolates the unit-specific time-series of a panel dataset with k units
into separate columns of a matrix.

Since gretl version 2020b, the built-in stack() function has got new cool
features, namely the "offset" and "n" parameters (see for details:
http://gretl.sourceforge.net/gretl-help/funcref.html#stack).

The stack_data() function proposed here, however, may still be helpful
for some applications. First, it can be applied within both a loop-block
and a function-block, respectively. While the built-in stack() function
can be applied in a loop-block since gretl version 2020b, it is not
applicable within a function-block as the dimension of the dataset cannot
be changed by some statement within a function-block.

The stack_data() does its operation not in-memory but rather stores the
stacked dataset in a separate data file. It simply stacks k series (each
of length T) vertically, and adds the two identifier series:
(1) 'unit_id' (unique integer identifying each of the k series) and (2)
'obs_id' (running number referring to each of T observations). Both,
'unit_id' and 'obs_id' may be helpful in case the user wants to define
the stacked data as a panel dataset, and/ or join another dataset by
means of gretl's built-in 'join' command.

The stack_matdata(), in contrast, does its operation in-memory and returns
a matrix to the user instead. This may be useful if you operate with
large data sets.

Please ask questions and report bugs on the gretl mailing list if possible.

Source code and test script(s) can be found here:
https://github.com/atecon/stack_data


=================
PUBLIC FUNCTIONS
=================

stack_data(L, filename, series_name, series_description):
=========================================================
Vertically stack data of list L into a single series and store the
resulting series. The returned matrix includes three series: (1) "unit_id"
is a numeric identifier referring to the i-th stacked series, (2) "obs_id"
is a unit-specific running number from 1 to T identifier, and (3) the
stacked series itself.

Arguments:
L               - list, List of series to stack
filename        - string, Full path plus filename where to store dataset
series_name     - string, Name of compiled series (optional, default:
                  "stacked_series")
series_description	- string, Set the variable's descriptive label
                      (optional, default: "")

Return:
If the stacked dataset is successfully stored, return 0, 1 otherwise.


stack_matdata(L, series_name[null]):
====================================
Works as the stack_data() function but returns a matrix instead. The
matrix comprises three columns: (1) "unit_id" is an index referring
to the i-th stacked series, (2) "obs_id" is a unit-specific running number
from 1 to T (observations) index, and (3) the stacked series itself.

Arguments:
L               - list, List of series to stack
series_name     - string, Name of compiled series (optional, default:
                  "stacked_series")

Return:
Non-empty matrix on success, otherwise empty matrix.


unstack(x, series_name[null], names_array[null], fix_names[TRUE]):
==================================================================
Works only for panel-data. For a panel with k units and T unit-specific
observations, series x is reshaped to a T by (1+k) matrix. The first
column refers to the observational index, while the remaining columns
refer to grouped values of x.

The columns of the resulting matrix may include labels if either (i) a
string-valued series 'series_names' or (ii) a string array with k
elements is provided. If both 'series_names' and 'names_array' are
provided and are valid inputs, 'series_names' dominates.

Arguments:
x               - series, Series to unstack
series_names    - series, String-valued series of unit names (optional)
names_array     - strings, Array of names for each panel unit (optional).
fix_names       - bool, Convert raw group names to a valid gretl
                  identifier (optional, default: TRUE)

Return:
Matrix of dimension T by (1 + k).


Changelog:
- v1.0, March 2021:
    + new unstack() function as proposed by Riccardo "Jack" Lucchetti
    + new stack_matdata() function
    + functions are tested by means of unit-tests
    + update documentation
    + new gretl version required is 2020b
    + internal re-factorings
- v0.9, April 2020:
    + initial release
